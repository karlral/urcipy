package com.sistema.urcipy.entidades;
// Generated 09/02/2023 11:28:52 PM by Hibernate Tools 4.3.1


import com.fasterxml.jackson.annotation.JsonIgnore;

import java.util.HashSet;
import java.util.Set;
import javax.persistence.*;

/**
 * Concepto generated by hbm2java
 */
@Entity
@Table(name="concepto"
    ,catalog="urcipy"
)
public class Concepto   {

    @Id @GeneratedValue(strategy = GenerationType.AUTO)
    @Column(name="idconcepto", unique=true, nullable=false)
     private int idconcepto;
    @ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="regional_idregional", nullable=false)
     private Regional regional;
     private String nomconcepto;
     private Byte tipo;
    @OneToMany(fetch=FetchType.LAZY, mappedBy="concepto")
    @JsonIgnore
    private Set<Movimiento> movimientos = new HashSet<Movimiento>(0);
    public Concepto() {
    }

	
    public Concepto( Regional regional) {

        this.regional = regional;
    }
    public Concepto( Regional regional, String nomconcepto, Byte tipo, Set<Movimiento> movimientos) {

       this.regional = regional;
       this.nomconcepto = nomconcepto;
       this.tipo = tipo;
       this.movimientos = movimientos;
    }
   


    public int getIdconcepto() {
        return this.idconcepto;
    }
    
    public void setIdconcepto(int idconcepto) {
        this.idconcepto = idconcepto;
    }


    public Regional getRegional() {
        return this.regional;
    }
    
    public void setRegional(Regional regional) {
        this.regional = regional;
    }

    
    @Column(name="nomconcepto", length=60)
    public String getNomconcepto() {
        return this.nomconcepto;
    }
    
    public void setNomconcepto(String nomconcepto) {
        this.nomconcepto = nomconcepto;
    }

    
    @Column(name="tipo")
    public Byte getTipo() {
        return this.tipo;
    }
    
    public void setTipo(Byte tipo) {
        this.tipo = tipo;
    }


    public Set<Movimiento> getMovimientos() {
        return this.movimientos;
    }
    
    public void setMovimientos(Set<Movimiento> movimientos) {
        this.movimientos = movimientos;
    }




}


